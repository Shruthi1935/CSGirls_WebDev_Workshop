NOTES:

layout.js:
- change meta data to 'personal portfolio'


global.css:
- delete everything except tailwind import


page.js:
- delete everything except imports


VS Code Extensions:
- IntelliSense: autocompleting, hover previews, helpful with syntax
- Prettier


Icons:
-  npm install react-icons
- npm install @heroicons/react


public folder:
- this is where you keep images you want to use on the frontend
- also keep custom fonts here

    fonts folder:
    - create new folder within public
    - import font files (rename if needed)
    - inside globals.css, add font setup/classes
    <>
      <div className="bg-sky-300 m-12 p-32 text-[#ffffff] text-center text-4xl font-bold">
        Hello World! <br /> All made with Tailwind CSS!
      </div>
      
      <div className="bg-sky-300 m-12 p-32 text-[#ffffff] text-center text-4xl font-bold font-camellia">
          Hello World! <br /> All made with Tailwind CSS!
      </div>

      <div className="bg-sky-300 m-12 p-32 text-[#ffffff] text-center text-4xl font-bold font-sugarmagic">
          Hello World <br /> All made with Tailwind CSS
      </div>
    </>


Landing Page:
- first work on navbar 
- then landing page content


Timeline:
- timeline: npx shadcn@latest add https://ui.aceternity.com/registry/timeline.json
- this creates components.json, lib/utils.js, and components/ui/componentName.jsx 
- import react in page.js
- npm install framer-motion
- npm install tailwindcss-animate
- paste timeline.jsx file & globals.css
- content within timeline goes within the data array in page.js


Skills and Technology Section:
- npm install react-icons
- import { DiJavascript, DiReact, DiPython, DiNodejs, DiGithubBadge } from "react-icons/di";

Navigation:
- import Link from "next/link";
- use <Link href="/about"> </Link> to navigate from one page to another

Deployment:
- install vercel: sudo npm install -g vercel
- navigate to project directory: cd my-portfolio
- vercel: this connects project to vercel
- if any issues, fix them and run: npm run build
- then deploy project: vercel
- test temporary preview links 
- then deploy to production: vercel --prod
- connect to github
- after changes made on your local host, run vercel --prod to redeploy

